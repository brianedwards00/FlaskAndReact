{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/edwa533/Desktop/FlaskAndReact/react-flask-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.handleFileChange = event => {\n      this.setState({\n        selectedFiles: event.target.files\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let obj = {};\n      obj.dataset_name = this.state.dataset_name;\n      obj.dataset_id = this.state.dataset_id;\n      let response1 = fetch(\"http://localhost:5000/data\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      }).then(response => response.json()).then(obj => {\n        console.log('Success:', obj);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      const fileData = new FormData();\n      fileData.filesToSend = this.state.selectedFiles;\n      let response2 = fetch(\"http://localhost:5000/data\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: fileData\n      }).then(response => response.json()).then(fileData => {\n        console.log('Success:', fileData);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n\n    this.state = {\n      dataset_name: '',\n      dataset_id: '',\n      selectedFiles: null\n    }; //{}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n  /*\n  Promise.all([response1,response2])\n      .then(files => {\n          files.forEach(file=>{\n              process(file.json())\n          })\n          //files[0].json()\n          //files[1].json()\n      })\n      .catch()\n  }\n  /*\n  FormData {filesToSend: FileList}\n  filesToSend: FileList\n  [\n  filesToSend: FileList\n  0: File {name: \"OK.txt\", lastModified: 1594135899738, lastModifiedDate: Tue Jul 07 2020 08:31:39 GMT-0700 (Pacific Daylight Time), webkitRelativePath: \"\", size: 65, …}\n  1: File {name: \"ok2.txt\", lastModified: 1594135908459, lastModifiedDate: Tue Jul 07 2020 08:31:48 GMT-0700 (Pacific Daylight Time), webkitRelativePath: \"\", size: 0, …}\n  length: 2\n  __proto__: FileList\n  __proto__: FormData\n  ]\n  length: 2\n  __proto__: FileList\n  __proto__: FormData\n  data_file= {file_to_send: file_list}\n  file_list_value= data_file[\"file_to_send\"]\n  file_list_value=[0:{\"file1\"}, 1:{}]\n  dict_file_to_send\n  */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom_text_placement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Enter the DataSet Name\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"first\",\n      name: \"dataset_name\",\n      value: this.state.dataset_name,\n      onChange: this.handleChange,\n      className: \"custom_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom_text_placement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Enter the DataSet ID\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"dataset_id\",\n      value: this.state.dataset_id,\n      onChange: this.handleChange,\n      className: \"custom_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Please select up to 4 files:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"custom_upload\",\n      onChange: this.handleFileChange,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"custom_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/edwa533/Desktop/FlaskAndReact/react-flask-app/src/App.js"],"names":["React","App","Component","constructor","props","handleChange","target","setState","name","value","handleFileChange","event","selectedFiles","files","handleSubmit","preventDefault","obj","dataset_name","state","dataset_id","response1","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","fileData","FormData","filesToSend","response2","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAIA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASJ,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAc;AACzB,WAAKC,QAAL,CAAc;AAAC,SAACD,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAAvB,OAAd;AACH,KAXkB;;AAAA,SAYnBC,gBAZmB,GAYAC,KAAK,IAAI;AACxB,WAAKJ,QAAL,CAAc;AACVK,QAAAA,aAAa,EAAED,KAAK,CAACL,MAAN,CAAaO;AADlB,OAAd;AAIH,KAjBkB;;AAAA,SAmBnBC,YAnBmB,GAmBHH,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACI,cAAN;AAEA,UAAIC,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACC,YAAJ,GAAmB,KAAKC,KAAL,CAAWD,YAA9B;AACAD,MAAAA,GAAG,CAACG,UAAJ,GAAiB,KAAKD,KAAL,CAAWC,UAA5B;AAEA,UAAIC,SAAS,GAAGC,KAAK,CACjB,4BADiB,EACa;AAC1BC,QAAAA,MAAM,EAAE,MADkB;AAE1BC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFiB;AAK1BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,GAAf;AALoB,OADb,CAAL,CAQXW,IARW,CAQNC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARN,EASXF,IATW,CASNX,GAAG,IAAI;AACTc,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,GAAxB;AACH,OAXW,EAYXgB,KAZW,CAYJC,KAAD,IAAW;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAdW,CAAhB;AAeA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,WAAT,GAAuB,KAAKlB,KAAL,CAAWN,aAAlC;AACA,UAAIyB,SAAS,GAAGhB,KAAK,CACjB,4BADiB,EACa;AAC1BC,QAAAA,MAAM,EAAE,MADkB;AAE1BC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFiB;AAK1BC,QAAAA,IAAI,EAAEU;AALoB,OADb,CAAL,CAQXP,IARW,CAQNC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARN,EASXF,IATW,CASNO,QAAQ,IAAI;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;AACH,OAXW,EAYXF,KAZW,CAYJC,KAAD,IAAW;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAdW,CAAhB;AAeH,KA1DkB;;AAEf,SAAKf,KAAL,GAAa;AAACD,MAAAA,YAAY,EAAE,EAAf;AAAmBE,MAAAA,UAAU,EAAE,EAA/B;AAAmCP,MAAAA,aAAa,EAAE;AAAlD,KAAb,CAFe,CAEsD;;AAErE,SAAKP,YAAL,GAAoB,KAAKA,YAAL,CAAkBiC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKxB,YAAL,GAAoB,KAAKA,YAAL,CAAkBwB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK5B,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB4B,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAoDG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BJC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,QAAQ,EAAE,KAAKzB,YAArB;AAAmC,MAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEI;AAAO,MAAA,IAAI,EAAE,MAAb;AACO,MAAA,EAAE,EAAG,OADZ;AAEO,MAAA,IAAI,EAAG,cAFd;AAGO,MAAA,KAAK,EAAG,KAAKI,KAAL,CAAWD,YAH1B;AAIO,MAAA,QAAQ,EAAG,KAAKZ,YAJvB;AAKO,MAAA,SAAS,EAAE,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAWI;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEI;AAAO,MAAA,IAAI,EAAE,QAAb;AACO,MAAA,IAAI,EAAG,YADd;AAEO,MAAA,KAAK,EAAG,KAAKa,KAAL,CAAWC,UAF1B;AAGO,MAAA,QAAQ,EAAG,KAAKd,YAHvB;AAIO,MAAA,SAAS,EAAE,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAEI;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,SAAS,EAAE,eAAhC;AAAgD,MAAA,QAAQ,EAAE,KAAKK,gBAA/D;AAAiF,MAAA,QAAQ,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CApBJ,eAwBQ;AAAO,MAAA,IAAI,EAAE,QAAb;AACG,MAAA,KAAK,EAAE,QADV;AAEG,MAAA,SAAS,EAAE,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBR,CADA,CADJ;AAoCH;;AAhI6B;;AAkI9B,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {dataset_name: '', dataset_id: '', selectedFiles: null} //{}\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFileChange = this.handleFileChange.bind(this)\n    }\n\n    handleChange = ({target}) => {\n        this.setState({[target.name]: target.value})\n    }\n    handleFileChange = event => {\n        this.setState({\n            selectedFiles: event.target.files,\n        })\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        let obj = {}\n        obj.dataset_name = this.state.dataset_name\n        obj.dataset_id = this.state.dataset_id\n\n        let response1 = fetch(\n            \"http://localhost:5000/data\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(obj),\n            })\n            .then(response => response.json())\n            .then(obj => {\n                console.log('Success:', obj)\n            })\n            .catch((error) => {\n                console.error('Error:', error)\n            })\n        const fileData = new FormData()\n        fileData.filesToSend = this.state.selectedFiles\n        let response2 = fetch(\n            \"http://localhost:5000/data\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'text/plain'\n                },\n                body: fileData,\n            })\n            .then(response => response.json())\n            .then(fileData => {\n                console.log('Success:', fileData)\n            })\n            .catch((error) => {\n                console.error('Error:', error)\n            })\n    }\n        /*\n        Promise.all([response1,response2])\n            .then(files => {\n                files.forEach(file=>{\n                    process(file.json())\n                })\n                //files[0].json()\n                //files[1].json()\n            })\n            .catch()\n    }\n/*\n   FormData {filesToSend: FileList}\nfilesToSend: FileList\n[\n    filesToSend: FileList\n0: File {name: \"OK.txt\", lastModified: 1594135899738, lastModifiedDate: Tue Jul 07 2020 08:31:39 GMT-0700 (Pacific Daylight Time), webkitRelativePath: \"\", size: 65, …}\n1: File {name: \"ok2.txt\", lastModified: 1594135908459, lastModifiedDate: Tue Jul 07 2020 08:31:48 GMT-0700 (Pacific Daylight Time), webkitRelativePath: \"\", size: 0, …}\nlength: 2\n__proto__: FileList\n__proto__: FormData\n]\nlength: 2\n__proto__: FileList\n__proto__: FormData\n    data_file= {file_to_send: file_list}\n    file_list_value= data_file[\"file_to_send\"]\n    file_list_value=[0:{\"file1\"}, 1:{}]\n    dict_file_to_send\n   */\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.handleSubmit} className=\"parent\">\n                <label className=\"custom_text_placement\">\n                    Enter the DataSet Name\n                    <input type= \"text\"\n                           id = \"first\"\n                           name = \"dataset_name\"\n                           value= {this.state.dataset_name}\n                           onChange= {this.handleChange}\n                           className= \"custom_box\"\n                    />\n                </label>\n                <label className=\"custom_text_placement\">\n                    Enter the DataSet ID\n                    <input type= \"number\"\n                           name = \"dataset_id\"\n                           value= {this.state.dataset_id}\n                           onChange= {this.handleChange}\n                           className= \"custom_box\"\n                    />\n                </label>\n                <label>\n                    Please select up to 4 files:\n                    <input type = \"file\" className= \"custom_upload\" onChange={this.handleFileChange} multiple/>\n                </label>\n                    <input type= \"submit\"\n                       value= \"Submit\"\n                       className= \"custom_box\"\n                    />\n\n\n\n            </form>\n            </div>\n        )\n    }\n}\n    export default App"]},"metadata":{},"sourceType":"module"}